{
	"info": {
		"_postman_id": "59bb930f-f44b-4918-b9da-b38295769bd9",
		"name": "Petclinic",
		"description": "This is REST API documentation of the Spring Petclinic backend. If authentication is enabled, when calling the APIs use admin/admin\n\nContact Support:\n Name: Bryan Dollery\n Email: bryan.dollery@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test Owners",
			"item": [
				{
					"name": "Successfully  retrieve all owners",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5fff5e6-befc-417f-a1f1-aa34527173cc",
								"exec": [
									"pm.test(\"Successfully retrieve all pets\", function () {",
									"    pm.response.to.have.status(200); ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"address\": \"string\",\n    \"city\": \"string\",\n    \"firstName\": \"string\",\n    \"id\": 0,\n    \"lastName\": \"string\",\n    \"pets\": [\n      {\n        \"birthDate\": \"2020-05-13T01:28:54.328Z\",\n        \"id\": 0,\n        \"name\": \"string\",\n        \"type\": {\n          \"id\": 0,\n          \"name\": \"string\"\n        },\n        \"visits\": [\n          {\n            \"date\": \"yyyy/MM/dd\",\n            \"description\": \"string\",\n            \"id\": 0\n          }\n        ]\n      }\n    ],\n    \"telephone\": \"string\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners"
							]
						},
						"description": "Given I am on retrieve all owners request\nWhen I want to retrieve list of owners\nThen I will have a list of all the owners details"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm owners quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c918d9fc-0770-46df-9a9c-0820758af6f6",
								"exec": [
									"pm.test(\"Expect \" + environment.totalOwners + \" owners\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalOwners));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners"
							]
						},
						"description": "Given that there are x owners\nAnd I am on the confirm owners quantity request\nWhen I want to get the full owner list\nThen I expect that list to have x owners in it"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Can retrieve owner by lastName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e0b13be-8155-4df6-965f-3657fc6aaffc",
								"exec": [
									"pm.test(\"Can retrieve owner by lastName\", function () {",
									"    pm.response.json().forEach(owner => {",
									"        pm.expect(owner.lastName).to.eql(\"Two\");",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/*/lastname/:lastName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"*",
								"lastname",
								":lastName"
							],
							"variable": [
								{
									"description": "(Required) lastName",
									"key": "lastName",
									"value": "Two"
								}
							]
						},
						"description": "Given that there is list of owners\nAnd I am on the retrieve owner by last name request\nWhen I give a specific owner's last name\nThen I expect to retrieve all the owner's other details "
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										"*",
										"lastname",
										":lastName"
									],
									"variable": [
										{
											"key": "lastName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										"*",
										"lastname",
										":lastName"
									],
									"variable": [
										{
											"key": "lastName"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										"*",
										"lastname",
										":lastName"
									],
									"variable": [
										{
											"key": "lastName"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										"*",
										"lastname",
										":lastName"
									],
									"variable": [
										{
											"key": "lastName"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully add owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bf70368-78b0-44df-be26-aa42c9ccf561",
								"exec": [
									"pm.test(\"Successfully add owner\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalOwners\", parseInt(environment.totalOwners) + 1);",
									"     postman.setEnvironmentVariable(\"mostRecentlyAddedId\", pm.response.json().id)",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\":\"Parisha\",\n\t\"lastName\": \"K\",\n\t\"address\":\"KnowledgHut\",\n\t\"telephone\":\"34567\",\n\t\"city\":\"Zoom\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners"
							]
						},
						"description": "Given that I am on the add owner request\nWhen I want to add an owner\nThen I expect the owner to be added to the owners list"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to add owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84f8888d-7f6b-4f63-81cc-b126ab75beb1",
								"exec": [
									"pm.test(\"Fail to add owner\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\":\"\",\n\t\"lastName\": \"\",\n\t\"address\":\"\",\n\t\"telephone\":\"\",\n\t\"city\":\"\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners"
							]
						},
						"description": "Given I am on the fail to add owner request\nWhen I want to add an owner with no data\nThen The owner will not be added to the owners list"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully update owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94d6300b-c164-4a13-9f87-03382dc6e421",
								"exec": [
									"pm.test(\"Update owner's name\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/owners';",
									"    ",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var firstName = json[json.length - 1].firstName;",
									"            pm.expect(firstName).to.eql('Parisha');",
									"        }",
									"    });",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Parisha\",\n    \"lastName\": \"Gupta\",\n\t\"address\":\"KnowledgHut\",\n\t\"telephone\":\"1111\",\n\t\"city\":\"Zoom\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners/:ownerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								":ownerId"
							],
							"variable": [
								{
									"key": "ownerId",
									"value": "{{mostRecentlyAddedId}}",
									"description": "(Required) ownerId"
								}
							]
						},
						"description": "Given I am on the update owner request\nWhen I want to update the last added owner's details\nThen The owner will be updated on the owners list"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete most recent owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89b7f450-af52-4074-abab-68fb49ea2a21",
								"exec": [
									"pm.test(\"Delete most recent owner\", function () {",
									"    pm.response.to.have.status(204); // deleted",
									"    postman.setEnvironmentVariable(\"totalOwners\", parseInt(environment.totalOwners) - 1);",
									"    ",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/:ownerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								":ownerId"
							],
							"variable": [
								{
									"key": "ownerId",
									"value": "{{mostRecentlyAddedId}}"
								}
							]
						},
						"description": "Given I am on the delete most recent owner request\nWhen I want to delete the most recent added owner\nThen The owner will be removed from the owners list"
					},
					"response": []
				},
				{
					"name": "Failt to delete non-existant owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af371d0a-4f31-4db9-848f-90448e10b5b1",
								"exec": [
									"pm.test(\"Fail to delete non-existant owner\", function () {",
									"    pm.response.to.have.status(404); // Not found",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/:ownerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								":ownerId"
							],
							"variable": [
								{
									"key": "ownerId",
									"value": "11111111"
								}
							]
						},
						"description": "Given I am on the fail to delete non-existant owner request\nWhen I want to delete an owner with a non-existant owner ID\nThen I will receive a fail to delete an owner error message"
					},
					"response": []
				}
			],
			"description": "As an employee\nI want to add, remove, and update owners\nSo than I can maintain our customer list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9a2a9c5a-36dd-4e50-9957-33e9544fd13a",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/owners';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"    } else {",
							"        var json = res.json();",
							"        postman.setEnvironmentVariable(\"totalOwners\", json.length);    ",
							"        postman.setEnvironmentVariable(\"mostRecentlyAddedId\", json[json.length - 1].id);",
							"    }",
							"});",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9b62684-8478-44cb-ba5a-6b6e72a9b2d3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "pets",
			"item": [
				{
					"name": "Successfully  retrieve all pets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b66141f-be1a-4df9-a75b-0ddde728d5af",
								"exec": [
									"pm.test(\"Successfully retrieve all pets\", function () {",
									"    pm.response.to.have.status(200); ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"birthDate\": \"2020-05-12T11:06:06.561Z\",\r\n    \"id\": 0,\r\n    \"name\": \"string\",\r\n    \"owner\": {\r\n      \"address\": \"string\",\r\n      \"city\": \"string\",\r\n      \"firstName\": \"string\",\r\n      \"id\": 0,\r\n      \"lastName\": \"string\",\r\n      \"pets\": [\r\n        null\r\n      ],\r\n      \"telephone\": \"string\"\r\n    },\r\n    \"type\": {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    },\r\n    \"visits\": [\r\n      {\r\n        \"date\": \"yyyy/MM/dd\",\r\n        \"description\": \"string\",\r\n        \"id\": 0\r\n      }\r\n    ]\r\n  }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						},
						"description": "Given I am on retrieve all pets request\nWhen I want to retrieve list of pets\nThen I will have a list of all the pets details"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm pets quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1700775-c15a-452f-a015-d8698248fe9b",
								"exec": [
									"pm.test(\"Expect \" + environment.totalPets + \" pets\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalPets));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						},
						"description": "Given that there are x pets\nAnd I am on the confirm pets quantity request\nWhen I want to get the full pets list\nThen I expect that list to have x pets in it"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unsuccessfully add pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63027a2a-c888-4ad3-a61e-3949f0faf30a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"birthDate\": \"2019/06/13\",\n    \"name\": \"Jabberwocky\"\n    \n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						}
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully update pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "843501b1-8cec-458c-be47-39a6d9fcb5d9",
								"exec": [
									"pm.test(\"Update pet's name\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/pets';",
									"    ",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var name = json[json.length - 1].name;",
									"            pm.expect(name).to.eql('snowBall');",
									"        }",
									"    });",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": 11,\n        \"name\": \"snowBall\",\n        \"birthDate\": \"2000/03/09\",\n        \"type\": {\n            \"id\": 5,\n            \"name\": \"bird\"\n        },\n        \"owner\": {\n            \"id\": 9,\n            \"firstName\": \"wibble\",\n            \"lastName\": \"Dollery\",\n            \"address\": \"wherever\",\n            \"city\": \"Nobody cares\",\n            \"telephone\": \"3132\"\n        },\n        \"visits\": []\n    }",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{mostRecentlyAddedPetId}}",
									"description": "(Required) petId"
								}
							]
						},
						"description": "Given I am on the update pet request\nWhen I want to update the last added pet's details\nThen The pet will be updated on the pets list"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete most recent pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e63300d5-f868-4b84-893f-1d5d59d2a35c",
								"exec": [
									"pm.test(\"Delete most recent pet\", function () {",
									"    pm.response.to.have.status(204); // deleted",
									"    postman.setEnvironmentVariable(\"totalPets\", parseInt(environment.totalPets) - 1);",
									"    ",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{mostRecentlyAddedPetId}}",
									"description": "(Required) petId"
								}
							]
						},
						"description": "Given I am on the delete most recent pet request\nWhen I want to delete the most recent added pet\nThen The pet will be removed from the pets list"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "As an employee\nI want to add, remove, retrieve and update pets\nSo than I can maintain our pet list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "220d9393-0d04-48ea-8880-8df45ecc6157",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/pets';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"    } else {",
							"        var json = res.json();",
							"        postman.setEnvironmentVariable(\"totalPets\", json.length);    ",
							"        postman.setEnvironmentVariable(\"mostRecentlyAddedPetId\", json[json.length - 1].id);",
							"    }",
							"});",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b0687880-6044-4495-974e-0387dc04480e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "vets",
			"item": [
				{
					"name": "Successfully  retrieve all vets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "204e5e79-656c-4382-bfa6-7b550712acf7",
								"exec": [
									"pm.test(\"Successfully retrieve all pets\", function () {",
									"    pm.response.to.have.status(200); ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"firstName\": \"string\",\n    \"id\": 0,\n    \"lastName\": \"string\",\n    \"specialties\": [\n      {\n        \"id\": 0,\n        \"name\": \"string\"\n      }\n    ]\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						},
						"description": "Given I am on retrieve all vets request\nWhen I want to retrieve list of vets\nThen I will have a list of all the vets details"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm vets quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3390e08b-c824-4e38-97d5-57c960617934",
								"exec": [
									"pm.test(\"Expect \" + environment.totalOwners + \" vets\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalVets));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						},
						"description": "Given that there are x vets\nAnd I am on the confirm vets quantity request\nWhen I want to get the full vets list\nThen I expect that list to have x vets in it"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully add vet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14cd0302-fadf-4d22-a866-1ae78a33ff0e",
								"exec": [
									"pm.test(\"Successfully add vet\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) + 1);",
									"     postman.setEnvironmentVariable(\"mostRecentlyAddedVetId\", pm.response.json().id)",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Nabil\",\n    \"lastName\": \"Almusallm\",\n    \"specialties\": [\n    \t {\n                \"id\": 1,\n                \"name\": \"radiology\"\n            }\n    \t]\n   \n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						},
						"description": "Given that I am on the add vets request\nWhen I want to add a vet\nThen I expect the vet to be added to the vets list"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully update vet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dc2c4b5-7f43-44f1-aa40-98f6ef12e9d6",
								"exec": [
									"pm.test(\"Update vet's name\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/vets';",
									"    ",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var firstName = json[json.length - 1].firstName;",
									"            var lastName = json[json.length - 1].lastName;",
									"",
									"            pm.expect(firstName).to.eql('Nabil');",
									"            pm.expect(lastName).to.eql('Abdulrahman');",
									"",
									"        }",
									"    });",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Nabil\",\n    \"lastName\": \"Abdulrahman\"\n  \n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"key": "vetId",
									"value": "{{mostRecentlyAddedVetId}}",
									"description": "(Required) vetId"
								}
							]
						},
						"description": "Given I am on the update vet request\nWhen I want to update the last added vet's details\nThen The vet will be updated on the vets list"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete most recent vet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e969f8c8-7ed1-46f7-9763-469ec1d7bf27",
								"exec": [
									"pm.test(\"Delete most recent vet\", function () {",
									"    pm.response.to.have.status(204); // deleted",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) - 1);",
									"    ",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"key": "vetId",
									"value": "{{mostRecentlyAddedVetId}}",
									"description": "(Required) vetId"
								}
							]
						},
						"description": "Given I am on the delete most recent vet request\nWhen I want to delete the most recent added vet\nThen The vet will be removed from the vets list"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "As an employee\nI want to add, remove, retrieve and update vets\nSo than I can maintain our vets list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7e2032d4-8d1a-4cf6-963c-88776d6502ab",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/vets';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"    } else {",
							"        var json = res.json();",
							"        postman.setEnvironmentVariable(\"totalVets\", json.length);    ",
							"        postman.setEnvironmentVariable(\"mostRecentlyAddedVetId\", json[json.length - 1].id);",
							"    }",
							"});",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a4097d6c-f5a3-455b-a38d-0fbe1723625e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "visits",
			"item": [
				{
					"name": "Confirm visits quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "deb0cf1e-e97f-40c7-bde2-5caf117c7c9f",
								"exec": [
									"pm.test(\"Expect \" + environment.totalVisits + \"visits\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalVisits));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/visits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getVisit",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/visits/:visitId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits",
								":visitId"
							],
							"variable": [
								{
									"key": "visitId",
									"value": "<integer>",
									"description": "(Required) visitId"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm visits quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "478079c1-5ce3-48a1-976c-b8d042ee028e",
								"exec": [
									"pm.test(\"Expect \" + environment.totalVets + \" vets\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalVets));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "updateVisit",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"pet\": {\n        \"birthDate\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n            \"value\": \"<Circular reference to #/components/schemas/Owner detected>\"\n        },\n        \"type\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n        },\n        \"visits\": [\n            {\n                \"date\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"pet\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Pet detected>\"\n                }\n            },\n            {\n                \"date\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"pet\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Pet detected>\"\n                }\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/visits/:visitId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits",
								":visitId"
							],
							"variable": [
								{
									"key": "visitId",
									"value": "<integer>",
									"description": "(Required) visitId"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "deleteVisit",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/visits/:visitId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits",
								":visitId"
							],
							"variable": [
								{
									"key": "visitId",
									"value": "<integer>",
									"description": "(Required) visitId"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "645f24ff-d4f9-4650-8a39-47787d362ffd",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/visits';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"    } else {",
							"        var json = res.json();",
							"        postman.setEnvironmentVariable(\"totalVisits\", json.length);    ",
							"        postman.setEnvironmentVariable(\"mostRecentlyAddedVisitsId\", json[json.length - 1].id);",
							"    }",
							"});",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9ac2da3-5b28-4faf-8ecf-eec764f7f57d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "pettypes",
			"item": [
				{
					"name": "Successfully  retrieve all pet types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bebcad2-5a92-4b13-9b29-e00dbffedf0b",
								"exec": [
									"pm.test(\"Successfully retrieve all pet types\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pettypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes"
							]
						},
						"description": "Given I am on retrieve all pet types request\nWhen I want to retrieve list of all pet types \nThen I will have a list of all the pet types details"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully add pet type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd017b0b-dd77-4d88-bfec-cf52cde7db86",
								"exec": [
									"pm.test(\"Successfully add pet type\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalPetTypes\", parseInt(environment.totalOwners) + 1);",
									"     postman.setEnvironmentVariable(\"mostRecentlyAddedPetTypeId\", pm.response.json().id)",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hippo\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pettypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes"
							]
						},
						"description": "Given that I am on the add pet type request\nWhen I want to add a new pet type\nThen I expect the new pet type to be added to the pet types list"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully update pet type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3b8654c-7654-4e1a-bf7b-0a8eecdaf548",
								"exec": [
									"pm.test(\"Update pet's name\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/pettypes';",
									"    ",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var name = json[json.length - 1].name;",
									"            pm.expect(name).to.eql('Jellyfish');",
									"        }",
									"    });",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n     \"id\": 102,\n     \"name\": \"Jellyfish\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pettypes/:petTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes",
								":petTypeId"
							],
							"variable": [
								{
									"key": "petTypeId",
									"value": "{{mostRecentlyAddedPetTypeId}}",
									"description": "(Required) petTypeId"
								}
							]
						},
						"description": "Given I am on the update pet type request\nWhen I want to update the last added pet type\nThen The pet type will be updated on the pet types list"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete most recent pet type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1688ba88-bb3b-416a-a939-0789dfcecb91",
								"exec": [
									"pm.test(\"Delete most recent pet type\", function () {",
									"    pm.response.to.have.status(204); // deleted",
									"    postman.setEnvironmentVariable(\"totalPetTypes\", parseInt(environment.totalPetTypes) - 1);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pettypes/:petTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes",
								":petTypeId"
							],
							"variable": [
								{
									"key": "petTypeId",
									"value": "{{mostRecentlyAddedPetTypeId}}",
									"description": "(Required) petTypeId"
								}
							]
						},
						"description": "Given I am on the delete most recent pet type request\nWhen I want to delete the most recent added pet type\nThen The pet type will be removed from the pet types list"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "As an employee\nI want to add, remove, retrieve and update pet types\nSo than I can maintain our pet types list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0f88039b-67b2-4e7f-948d-012a8437f71e",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/pettypes';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"        pm.fail();",
							"    } else {",
							"        var json = res.json();",
							"        pm.variables.set(\"totalPetTypes\", json.length);    ",
							"        pm.variables.set(\"mostRecentlyAddedPetTypeId\", json[json.length - 1].id);",
							"    }",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "48b356f3-ef9d-410f-9e7e-bd9d022cc326",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "specialties",
			"item": [
				{
					"name": "Successfully retrieve all vet specialties",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2da57561-9211-4d71-8131-05c569c4756d",
								"exec": [
									"pm.test(\"Successfully retrieve all vet specialties\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/specialties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties"
							]
						},
						"description": "Given I am on retrieve all specialties request\nWhen I want to retrieve list of vet specialties\nThen I will have a list of all the vet specialties details"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully add vet specialty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13ab4055-f720-4c76-b886-aafbe5fb9b40",
								"exec": [
									"pm.test(\"Successfully add vet specialty\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalVetSpecialties\", parseInt(environment.totalVetSpecialties) + 1);",
									"     postman.setEnvironmentVariable(\"mostRecentlyAddedSpecialtyId\", pm.response.json().id)",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Dermatology\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/specialties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties"
							]
						},
						"description": "Given that I am on the add vet specialty request\nWhen I want to add a new vet specialty\nThen I expect the new specialty to be added to the vet specialties list"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully update vet specialty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f70423a-b601-436f-8eef-533761f42f04",
								"exec": [
									"pm.test(\"Update vet specialty name\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/specialties';",
									"    ",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var name = json[json.length - 1].name;",
									"            pm.expect(name).to.eql('Dentistry');",
									"        }",
									"    });",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 103,\n    \"name\": \"Dentistry\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/specialties/:specialtyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties",
								":specialtyId"
							],
							"variable": [
								{
									"description": "(Required) specialtyId",
									"key": "specialtyId",
									"value": "{{mostRecentlyAddedSpecialtyId}}"
								}
							]
						},
						"description": "Given I am on the update vet specialty request\nWhen I want to update the last added vet's specialty\nThen The vet's specialty will be updated "
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete most recent vet specialty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "801d4d4e-5a19-477a-9c58-f3f7010c3f54",
								"exec": [
									"pm.test(\"Delete most recent vet specialty\", function () {",
									"    pm.response.to.have.status(204); // deleted",
									"    postman.setEnvironmentVariable(\"totalVetSpecialties\", parseInt(environment.totalVetSpecialties) - 1);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/specialties/:specialtyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties",
								":specialtyId"
							],
							"variable": [
								{
									"key": "specialtyId",
									"value": "{{mostRecentlyAddedSpecialtyId}}",
									"description": "(Required) specialtyId"
								}
							]
						},
						"description": "Given I am on the delete most recent vet specialty request\nWhen I want to delete the most recent added vet specialty\nThen The vet specialty will be removed from the vet specialties list"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/:specialtyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":specialtyId"
									],
									"variable": [
										{
											"key": "specialtyId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "As an employee\nI want to add, remove, retrieve and update vet specialties\nSo than I can maintain our vet specialties list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e18f0eb7-9a9e-4eef-bbfd-dccb86e76b9c",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/specialties';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"        pm.fail();",
							"    } else {",
							"        var json = res.json();",
							"        pm.variables.set(\"totalVetSpecialties\", json.length);    ",
							"        pm.variables.set(\"mostRecentlyAddedspecialtyId\", json[json.length - 1].id);",
							"    }",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fe257fb9-dc02-4815-9c48-346dfa54c231",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "//localhost:8080/petclinic/api",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}